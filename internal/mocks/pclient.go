// Code generated by mockery v2.26.1. DO NOT EDIT.
// TODO: Regenerate mocks with updated API

package mocks

import (
	"context"

	"github.com/luxfi/ids"
	"github.com/luxfi/node/v2/v2/utils/rpc"
	"github.com/luxfi/node/v2/v2/vms/platformvm"
	"github.com/stretchr/testify/mock"
)

// PClient is an autogenerated mock type for the PClient type
type PClient struct {
	mock.Mock
}

// GetCurrentValidators provides a mock function with given fields: ctx, subnetID, nodeIDs, options
func (m *PClient) GetCurrentValidators(ctx context.Context, subnetID ids.ID, nodeIDs []ids.NodeID, options ...rpc.Option) ([]platformvm.ClientPermissionlessValidator, error) {
	args := []interface{}{ctx, subnetID, nodeIDs}
	for _, opt := range options {
		args = append(args, opt)
	}
	ret := m.Called(args...)

	var r0 []platformvm.ClientPermissionlessValidator
	if rf, ok := ret.Get(0).(func(context.Context, ids.ID, []ids.NodeID) []platformvm.ClientPermissionlessValidator); ok {
		r0 = rf(ctx, subnetID, nodeIDs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]platformvm.ClientPermissionlessValidator)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, ids.ID, []ids.NodeID) error); ok {
		r1 = rf(ctx, subnetID, nodeIDs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}