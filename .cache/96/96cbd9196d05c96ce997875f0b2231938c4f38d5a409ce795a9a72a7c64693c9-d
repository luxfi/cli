//go:cgo_ldflag "-O2"
//go:cgo_ldflag "-g"
// Code generated by cmd/cgo; DO NOT EDIT.

package process

import "unsafe"

import "syscall"

import _cgopackage "runtime/cgo"

type _ _cgopackage.Incomplete
var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
//go:linkname _Cgo_keepalive runtime.cgoKeepAlive
//go:noescape
func _Cgo_keepalive(interface{})
//go:linkname _Cgo_no_callback runtime.cgoNoCallback
func _Cgo_no_callback(bool)
type _Ctype__GoString_ string

type _Ctype_char int8

type _Ctype_int int32

type _Ctype_intgo = _Ctype_ptrdiff_t

type _Ctype_long int64

type _Ctype_ptrdiff_t = _Ctype_long

type _Ctype_size_t = _Ctype_ulong

type _Ctype_uint uint32

type _Ctype_uint32_t = _Ctype_uint

type _Ctype_ulong uint64

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
//go:noescape
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
//go:noescape
func _cgoCheckResult(interface{})
const _Ciconst_PROC_PIDPATHINFO_MAXSIZE = 0x1000

//go:cgo_import_static _cgo_244eae46f32c_C2func_proc_pidpath
//go:linkname __cgofn__cgo_244eae46f32c_C2func_proc_pidpath _cgo_244eae46f32c_C2func_proc_pidpath
var __cgofn__cgo_244eae46f32c_C2func_proc_pidpath byte
var _cgo_244eae46f32c_C2func_proc_pidpath = unsafe.Pointer(&__cgofn__cgo_244eae46f32c_C2func_proc_pidpath)

//go:cgo_unsafe_args
func _C2func_proc_pidpath(p0 _Ctype_int, p1 unsafe.Pointer, p2 _Ctype_uint32_t) (r1 _Ctype_int, r2 error) {
	errno := _cgo_runtime_cgocall(_cgo_244eae46f32c_C2func_proc_pidpath, uintptr(unsafe.Pointer(&p0)))
	if errno != 0 { r2 = syscall.Errno(errno) }
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}

//go:linkname _cgo_runtime_gostring runtime.gostring
func _cgo_runtime_gostring(*_Ctype_char) string

// GoString converts the C string p into a Go string.
func _Cfunc_GoString(p *_Ctype_char) string {
	return _cgo_runtime_gostring(p)
}

func _Cfunc__CMalloc(n _Ctype_size_t) unsafe.Pointer {
	return _cgo_cmalloc(uint64(n))
}
//go:cgo_import_static _cgo_244eae46f32c_Cfunc_free
//go:linkname __cgofn__cgo_244eae46f32c_Cfunc_free _cgo_244eae46f32c_Cfunc_free
var __cgofn__cgo_244eae46f32c_Cfunc_free byte
var _cgo_244eae46f32c_Cfunc_free = unsafe.Pointer(&__cgofn__cgo_244eae46f32c_Cfunc_free)

//go:cgo_unsafe_args
func _Cfunc_free(p0 unsafe.Pointer) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_244eae46f32c_Cfunc_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_244eae46f32c_Cfunc_proc_pidpath
//go:linkname __cgofn__cgo_244eae46f32c_Cfunc_proc_pidpath _cgo_244eae46f32c_Cfunc_proc_pidpath
var __cgofn__cgo_244eae46f32c_Cfunc_proc_pidpath byte
var _cgo_244eae46f32c_Cfunc_proc_pidpath = unsafe.Pointer(&__cgofn__cgo_244eae46f32c_Cfunc_proc_pidpath)

//go:cgo_unsafe_args
func _Cfunc_proc_pidpath(p0 _Ctype_int, p1 unsafe.Pointer, p2 _Ctype_uint32_t) (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_244eae46f32c_Cfunc_proc_pidpath, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}

//go:cgo_import_static _cgo_244eae46f32c_Cfunc__Cmalloc
//go:linkname __cgofn__cgo_244eae46f32c_Cfunc__Cmalloc _cgo_244eae46f32c_Cfunc__Cmalloc
var __cgofn__cgo_244eae46f32c_Cfunc__Cmalloc byte
var _cgo_244eae46f32c_Cfunc__Cmalloc = unsafe.Pointer(&__cgofn__cgo_244eae46f32c_Cfunc__Cmalloc)

//go:linkname runtime_throw runtime.throw
func runtime_throw(string)

//go:cgo_unsafe_args
func _cgo_cmalloc(p0 uint64) (r1 unsafe.Pointer) {
	_cgo_runtime_cgocall(_cgo_244eae46f32c_Cfunc__Cmalloc, uintptr(unsafe.Pointer(&p0)))
	if r1 == nil {
		runtime_throw("runtime: C malloc failed")
	}
	return
}
